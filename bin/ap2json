#!/usr/bin/env node

var before = Date.now();

var splitResults = require('./../index.js');
var fs = require('fs-extra');
var chalk = require('chalk');
var argv = require('yargs')
	.usage('Usage: $0 [options]')
	.option('f', {
		alias: 'file',
		demand: true,
		describe: 'File containing API election results.',
		type: 'string'
	})
	.option('d', {
		alias: 'directory',
		demand: true,
		describe: 'Directory where ap2json will place the output JSON files.',
		type: 'string'
	})
	.option('c', {
		alias: 'clear',
		demand: false,
		default: true,
		describe: 'Whether to clear output directory before writing output files.',
		type: 'boolean'
	})
	.example('$0 -f results.json -d output')
	.argv;

var input = fs.readFileSync(argv.file, 'utf8');

var json = null;
try {
	json = JSON.parse(input);
}
catch(e) {
	console.log(chalk.red('ERROR: file ' + argv.file + ' is not valid JSON.'));
	process.exit(1);
}

if (argv.clear) {
	// empty output directory
	fs.emptyDirSync(argv.d);
	console.log(chalk.green('Emptying ' + argv.d + ' directory'));
}

// write out many little json files
splitResults(json, argv.d);

// get count of files in output directory
var filenames = fs.readdirSync(argv.d);

var after = Date.now();
console.log(chalk.green('Wrote ' + json.races.length + ' files in ' + (after - before) + ' ms.'));

// vim: set ft=javascript:
